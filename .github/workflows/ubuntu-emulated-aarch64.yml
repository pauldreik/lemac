on: [pull_request]

jobs:
  build_job:
    # The host should always be linux
    runs-on: ubuntu-24.04
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}

    strategy:
      matrix:
        CXX: [g++,]
        include:
          - arch: aarch64
            distro: ubuntu24.04
#          - arch: aarch64
#            distro: bookworm
    steps:
      - uses: actions/checkout@v4
      - uses: uraimo/run-on-arch-action@v3
        name: Build artifact
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          base_image: ${{ matrix.base_image }}

          # Not required, but speeds up builds
          githubToken: ${{ github.token }}

          # The shell to run commands with in the container
          shell: /bin/sh

          # Install some dependencies in the container. This speeds up builds if
          # you are also using githubToken. Any dependencies installed here will
          # be part of the container image that gets cached, so subsequent
          # builds don't have to re-install them. The image layer is cached
          # publicly in your project's package repository, so it is vital that
          # no secrets are present in the container state or logs.
          install: |
            case "${{ matrix.distro }}" in
              ubuntu*|jessie|stretch|buster|bullseye|bookworm)
                apt-get update -q -y
                apt-get install -q -y cmake catch2 ninja-build g++ python3
                ;;
              fedora*)
                dnf -y update
                dnf -y install git which
                ;;
              alpine*)
                apk update
                apk add git
                ;;
            esac

          run: |
            for BUILD_TYPE in Debug Release; do
              cmake -GNinja -DCMAKE_CXX_COMPILER=${{matrix.CXX}} -B ${{github.workspace}}/build-$BUILD_TYPE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
              cmake --build ${{github.workspace}}/build-$BUILD_TYPE
              (cd ${{github.workspace}}/build-$BUILD_TYPE; ctest -C $BUILD_TYPE)
              test/test_tool.sh ${{github.workspace}}/build-$BUILD_TYPE/lemacsum
            done
